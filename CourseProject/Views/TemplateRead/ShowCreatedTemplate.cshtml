@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Westwind.AspNetCore.Markdown
@model CourseProject.Models.Entities.Template
<!DOCTYPE html>
<html lang="en">
<head>
    <title></title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/CourseProject.styles.css" asp-append-version="true" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />
</head>
<body>
<div class="container mt-4"> 
    <form>
        @Html.AntiForgeryToken()

        <div class="form-group">
            <label for="topicLabel">Title</label>
            <h5 id="topicLabel">@Model.Title</h5>
        </div>

        <div class="form-group">
            <h3>Description</h3>
            <div>
                @Html.Raw(Markdown.ParseHtmlString(Model.Description))
            </div>
        </div>

        <div class="form-group">
            <label for="topicNameLabel">Topic Name</label>
            <h5 id="topicNameLabel">@Model.TopicName</h5>
        </div>

        <div class="form-group">
            <label>Image</label>
            <img src="@Model.ImageUrl" class="img-fluid" alt="Topic Image"> 
        </div>

        <div class="form-group form-check">
            <input type="checkbox" class="form-check-input" @(Model.IsPublic ? "checked" : "") disabled id="isShownCheckbox" />
            <label class="form-check-label" for="isShownCheckbox">Is Public</label>
        </div>

        <h4>Questions</h4>
        <div class="mb-3">
            @foreach (var question in Model.Questions)
            {
            <div class="border p-3 mb-2 rounded"> 
                <h5>Question Title: @question.Title</h5>
                <p>Question Description: @question.Description</p>
                <p>Question Type: @question.Type</p>
                <div class="form-check">
                    <input class="form-check-input" value ="@question.IsShown">
                    <label class="form-check-label"> Is shown </label>
                </div>
            </div>
            }
        </div>

        <h3>Comments Section</h3>
        <div class="form-group">
            <ul id="commentsListId" class="list-group mb-3"> 
                @foreach (var comment in Model.Comments)
                {
                <li class="list-group-item">@comment.CommentText</li> 
                }
            </ul>
            <div class="input-group">
                <textarea id="commentTextId" class="form-control" placeholder="Add a comment..."></textarea>
                <button type="button" id="addCommentId" class="btn btn-primary">Add Comment</button>
            </div>
        </div>

        <div class="form-group">
            <button type="button" id="putLikeBtnId" class="btn btn-light">
                <img src="/likeBtn.jpg" style="width: 20px; height: 20px;" alt="Like">
            </button>
            <span id="likesCountLabel" class="ms-2">@ViewBag.LikesAmount</span> 
        </div>


    
    <script>
        $(document).ready(function () {
            $("#addCommentId").click(function () {
                var commentText = $("#commentTextId").val(); 
                var userName = '@User.Identity.Name';
                
                if (commentText.trim() !== "") {

                    var newComment = $("<li></li>").html(
                        "<strong>" + userName + "</strong>: " + commentText 
                    );
                    $("#commentsListId").append(newComment); 
                    $("#commentTextId").val("");
                    $.ajax({
                        url: '@Url.Action("AddComment", "TemplateRead")',
                        type: 'POST',
                        data: {
                            templateId: '@Model.TemplateId', 
                            commentText: commentText 
                        },
                       
                    });
                } else {
                    alert("Please, input text comment");
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            let totalLikesAmount = @ViewBag.LikesAmount;
            $("#putLikeBtnId").click(function () {
               
                $.ajax({
                    url: '@Url.Action("AddLike", "TemplateRead")', 
                    type: 'POST',
                    data: {
                        templateId: '@Model.TemplateId' 
                    },
                    success: function (response) 
                    {
                    if(response.message ==="success")
                    {
                        totalLikesAmount++;
                        $("#likesCountLabel").text(totalLikesAmount);
                        console.log("Like added successfully.");
                        }
                    },
                    error: function (xhr) 
                    {
                        if (xhr.status === 400 && xhr.responseJSON.message!=="exist") {
                            console.warn(xhr.responseJSON.message);
                        } else {
                            alert("You have already liked this template");
                        }
                    }         
                });
            });
        });
    </script>
    </form>
</div>  
</body>
</html>